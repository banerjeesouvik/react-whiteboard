{"version":3,"sources":["icons/highlighter.svg","icons/eraser.svg","components/ToolBar/styles.jsx","lib/constants.js","components/ToolBar/DrawingTool/DrawingTool.jsx","components/ToolBar/BrushSizeSelector/BrushSizeSelector.jsx","components/ToolBar/ColorPicker/ColorPicker.jsx","components/ToolBar/ToolBar.jsx","components/Canvas/Canvas.jsx","components/WhiteBoard/WhiteBoard.jsx","App.js","index.js","icons/pen.svg"],"names":["module","exports","Button","styled","button","props","selected","Point","div","width","disabled","selectedColor","FlexContainer","Header","header","StyledImage","img","StyledColorPicker","input","PEN","THIN","MEDIUM","THICK","Icons","icon","PenIcon","name","MarkerIcon","EraserIcon","DrawingTool","handleSelect","map","item","key","onClick","src","alt","BrushSizeSelector","selectedTool","penSelected","title","ColorPicker","type","value","onChange","e","target","ToolBar","handleToolSelect","selectedWidth","handleWidthSelect","handleColorSelect","StyledCanvas","canvas","getProperCursor","Canvas","canvasRef","useRef","canvasContext","drawing","useEffect","current","window","innerWidth","height","innerHeight","context","getContext","draw","currentX","currentY","xCoor","yCoor","clearRect","globalCompositeOperation","lineTo","strokeStyle","lineWidth","stroke","highlight","drawLine","ref","onMouseMove","nativeEvent","offsetX","offsetY","onMouseDown","beginPath","moveTo","onMouseUp","closePath","WhiteBoard","useState","drawingTool","setDrawingTool","brushWidth","setBrushWidth","penColor","setPenColor","highlightColor","setHighlightColor","color","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.839ad7e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/highlighter.1b602999.svg\";","module.exports = __webpack_public_path__ + \"static/media/eraser.aaf752f0.svg\";","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  width: 2.5rem;\n  height: 2.5rem;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  margin-right: 0.5rem;\n  background-color: ${props => props.selected ? '#cbcbcb' : '#fafafa'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  :hover:not(:disabled) {\n    background-color: #cbcbcb;\n  }\n\n  :disabled {\n    cursor: not-allowed;\n  }\n`\n\nexport const Point = styled.div`\n  width: ${({width}) => width * 3}px;\n  height: ${({width}) => width * 3}px;\n  border-radius: 50%;\n  background-color: ${({disabled, selectedColor}) => disabled ? '#cfcfcf' : selectedColor};\n`\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  align-items: center; \n  margin-right: 8rem;\n`\n\nexport const Header = styled.header`\n  height: 5rem;\n  box-shadow: 0 1px 4px 1px rgba(0, 0, 0, 0.2);\n  padding: 0 1.5rem;\n  display: flex;\n  align-items: center;\n  background-color: #282c34;\n`\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  object-fit: contain;\n`\n\nexport const StyledColorPicker = styled.input`\n  width: 1.75rem;\n  height: 1.75rem;\n  border: none;\n  cursor: pointer;\n\n  :disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`\n","export const PEN = 'pen'\nexport const HIGHLIGHTER = 'highlighter'\nexport const ERASER = 'eraser'\nexport const THIN = 1\nexport const MEDIUM = 3\nexport const THICK = 5\nexport const BLACK = '#000000'\nexport const YELLOW = '#FFFF00'\nexport const BASE_ERASER_SIZE = 15\n","import React from 'react'\n\nimport PenIcon from '../../../icons/pen.svg'\nimport MarkerIcon from '../../../icons/highlighter.svg'\nimport EraserIcon from '../../../icons/eraser.svg'\n\nimport { FlexContainer, Button, StyledImage } from '../styles'\nimport { ERASER, HIGHLIGHTER, PEN } from '../../../lib/constants'\n\nconst Icons = [\n  {\n    icon: PenIcon, \n    name: PEN,\n  },\n  {\n    icon: MarkerIcon,\n    name: HIGHLIGHTER\n  },\n  {\n    icon: EraserIcon,\n    name: ERASER\n  }\n]\n\nconst DrawingTool = ({ selected, handleSelect }) => {\n  const handleToolSelect = key => () => handleSelect(key)\n  return (\n    <FlexContainer>\n      {Icons.map((item) => (\n        <Button\n          key={item.name}\n          selected={item.name === selected}\n          onClick={handleToolSelect(item.name)}\n        >\n          <StyledImage src={item.icon} alt='icon' />\n        </Button>\n      ))}\n    </FlexContainer>\n  )\n}\n\nexport default DrawingTool\n","import React from 'react'\n\nimport { THIN, MEDIUM, THICK, PEN } from '../../../lib/constants'\nimport { Button, Point, FlexContainer } from '../styles'\n\nconst BrushSizeSelector = ({ selected, handleSelect, selectedTool, selectedColor }) => {\n  const penSelected = selectedTool === PEN\n  const handleWidthSelect = key => () => {\n    if (penSelected) handleSelect(key)\n  }\n\n  return (\n    <FlexContainer>\n      {[THIN, MEDIUM, THICK].map(width => (\n        <Button\n          key={`brush-${width}`}\n          selected={penSelected && width === selected}\n          onClick={handleWidthSelect(width)}\n          disabled={!penSelected}\n          title={`${width}px`}\n        >\n          <Point width={width} disabled={!penSelected} selectedColor={selectedColor} />\n        </Button>\n      ))}\n    </FlexContainer>\n  )\n}\n\nexport default BrushSizeSelector\n","import React from 'react'\n\nimport { ERASER } from '../../../lib/constants'\nimport { FlexContainer, StyledColorPicker } from '../styles'\n\n\nconst ColorPicker = ({ selected, handleSelect, selectedTool }) => {\n  const handleColorChange = e => {\n    const {value} = e.target\n    handleSelect(value)\n  }\n\n  const disabled = selectedTool === ERASER\n\n  return (\n    <FlexContainer>\n      <StyledColorPicker\n        type=\"color\"\n        value={selected}\n        onChange={handleColorChange}\n        disabled={disabled}\n      />\n    </FlexContainer>\n  )\n}\n\nexport default ColorPicker\n","import React from \"react\"\n\nimport DrawingTool from './DrawingTool'\nimport BrushSizeSelector from './BrushSizeSelector'\nimport ColorPicker from './ColorPicker'\n\nimport { Header } from './styles'\n\n\nconst ToolBar = ({\n  selectedTool,\n  handleToolSelect,\n  selectedWidth,\n  handleWidthSelect,\n  selectedColor,\n  handleColorSelect\n}) => {\n  return (\n    <Header>\n      <DrawingTool\n        selected={selectedTool}\n        handleSelect={handleToolSelect}\n      />\n      <BrushSizeSelector\n        selected={selectedWidth}\n        handleSelect={handleWidthSelect}\n        selectedTool={selectedTool}\n        selectedColor={selectedColor}\n      />\n      <ColorPicker\n        selected={selectedColor}\n        handleSelect={handleColorSelect}\n        selectedTool={selectedTool}\n      />\n    </Header>\n  )\n}\n\nexport default ToolBar\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport { ERASER, HIGHLIGHTER, BASE_ERASER_SIZE, PEN } from '../../lib/constants'\n\nconst getProperCursor = (selectedTool) => {\n  switch(selectedTool) {\n    case PEN:\n      return 'url(\"https://i.ibb.co/7VF7KZN/pencil.png\") 16 24, auto'\n    case HIGHLIGHTER:\n      return 'url(\"https://i.ibb.co/zmVd8rc/marker.png\") 8 16, auto'\n    case ERASER:\n      return 'url(\"https://i.ibb.co/JnTDTQd/p-blank.png\"), auto'\n    default:\n      return 'auto'\n  }\n}\n\nconst StyledCanvas = styled.canvas`\n  cursor: ${props => getProperCursor(props.selectedTool)};\n`\n\nconst Canvas = ({ selectedTool, selectedWidth, selectedColor }) => {\n  const canvasRef = useRef(null)\n  const canvasContext = useRef(null)\n  const drawing = useRef(false)\n  \n  useEffect(() => {\n    // Setting the canvas dimension\n    canvasRef.current.width = window.innerWidth\n    canvasRef.current.height = window.innerHeight - 80 // subtracting height of the header\n    \n    const context = canvasRef.current.getContext('2d')\n    canvasContext.current = context\n  }, [])\n\n  const drawLine = (xCoor, yCoor) => {\n    const canvas = canvasContext.current\n    canvas.globalCompositeOperation = 'source-over'\n    canvas.lineTo(xCoor, yCoor)\n    canvas.strokeStyle = selectedColor\n    canvas.lineWidth = selectedWidth\n    canvas.stroke()\n  }\n\n  const highlight = (xCoor, yCoor) => {\n    const canvas = canvasContext.current\n    canvas.globalCompositeOperation = 'multiply'\n    canvas.lineTo(xCoor, yCoor)\n    canvas.strokeStyle = selectedColor\n    canvas.lineWidth = 6\n    canvas.stroke()\n  }\n\n  const erase = (xCoor, yCoor) => {\n    canvasContext.current.clearRect(xCoor, yCoor, BASE_ERASER_SIZE, BASE_ERASER_SIZE)\n  }\n\n  const draw = (currentX, currentY) => {\n    if (canvasContext.current) {\n      if (selectedTool === ERASER) {\n        erase(currentX, currentY)\n      } else if (selectedTool === HIGHLIGHTER) {\n        highlight(currentX, currentY)\n      } else { // Pen\n        drawLine(currentX, currentY)\n      }\n    } \n  }\n  \n  const handleMouseMove = ({nativeEvent}) => {\n    const {offsetX, offsetY } = nativeEvent\n\n    if (drawing.current) {\n      draw(offsetX, offsetY)\n    }\n  }\n\n  const handleMouseUp = () => {\n    canvasContext.current.closePath()\n    drawing.current = false\n  }\n\n  const handleMouseDown = ({nativeEvent, button}) => {\n    // Ignore mousedown events triggered due to right-click\n    if (button === 2) {\n      return\n    }\n\n    const {offsetX, offsetY} = nativeEvent\n    drawing.current = true\n\n    canvasContext.current.beginPath()\n    canvasContext.current.moveTo(offsetX, offsetY)\n  }\n  \n  return (\n    <StyledCanvas\n      ref={canvasRef}\n      onMouseMove={handleMouseMove}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      selectedTool={selectedTool}\n    />\n  )\n}\n\n\nexport default Canvas\n","import React, {useState} from \"react\"\n\nimport ToolBar from '../ToolBar'\nimport Canvas from '../Canvas'\n\nimport { PEN, THIN , BLACK, YELLOW } from '../../lib/constants'\n\nconst WhiteBoard = () => {\n  const [drawingTool, setDrawingTool] = useState(PEN)\n  const [brushWidth, setBrushWidth] = useState(THIN)\n  const [penColor, setPenColor] = useState(BLACK)\n  const [highlightColor, setHighlightColor] = useState(YELLOW)\n\n  const handleColorChange = color => {\n    if (drawingTool === PEN) {\n      setPenColor(color)\n    } else {\n      setHighlightColor(color)\n    }\n  }\n\n  const selectedColor = drawingTool === PEN ? penColor : highlightColor\n\n  return (\n    <div>\n      <ToolBar\n        selectedTool={drawingTool}\n        handleToolSelect={setDrawingTool}\n        selectedWidth={brushWidth}\n        handleWidthSelect={setBrushWidth}\n        selectedColor={selectedColor}\n        handleColorSelect={handleColorChange}\n      />\n      <Canvas\n        selectedTool={drawingTool}\n        selectedWidth={brushWidth}\n        selectedColor={selectedColor}\n      />\n    </div>\n  )\n}\n\nexport default WhiteBoard\n","import React from 'react'\nimport WhiteBoard from './components/WhiteBoard/WhiteBoard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WhiteBoard />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/pen.133d5714.svg\";"],"sourceRoot":""}